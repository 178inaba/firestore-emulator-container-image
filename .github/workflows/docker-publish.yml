name: Publish Docker Image

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/firestore-emulator
    outputs:
      imageid: ${{ steps.build-and-push.outputs.imageid }}
      digest: ${{ steps.build-and-push.outputs.digest }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

  test-published-image:
    name: Test Published Image
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - build-publish
    services:
      datastore-emulator:
        image: ghcr.io/178inaba/firestore-emulator
        ports:
          - 8080:8080
        env:
          DATABASE_MODE: datastore-mode
    env:
      DATASTORE_EMULATOR_HOST: localhost:8080
    steps:
      - run: |
          echo ${{ needs.build-publish.outputs.imageid }}
          echo ${{ needs.build-publish.outputs.digest }}
      - name: Test
        run: curl -f localhost:8080
